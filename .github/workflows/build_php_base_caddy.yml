name: Manual release for php builds (light)

on:
  workflow_dispatch:
    inputs:
      generate_dev:
        description: 'Generate a dev version'
        required: true
        type: boolean
        default: true
      image:
        description: 'Image type to build'
        default: "php"
        required: false
        type: string
      registry:
        description: 'Registry to deploy to'
        default: "adeliom"
        required: true
        type: choice
        options:
          - "ghcr.io/agence-adeliom"
          - "adeliom"

permissions:
  contents: read
  packages: write

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [ "8.4" ]
        variant: [ cli, fpm ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🔐 Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # 🔐 Connexion à GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get latest tag (auto)
        id: get_tag
        run: |
          if [ "${{ inputs.generate_dev }}" = "true" ]; then
            tag="dev"
          else
            tag=$(git describe --tags --abbrev=0)
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ inputs.registry }}/${{ inputs.image }}:${{ matrix.version }}-${{ matrix.variant }}" >> $GITHUB_OUTPUT
        id: image_tag
      - name: Set repository
        run: echo "REPOSITORY=${{ inputs.registry }}/${{ inputs.image }}" >> $GITHUB_OUTPUT
        id: repository
      - name: Build image amd64
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          platforms: "linux/amd64"
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          #platforms: "linux/amd64,linux/arm64"
          platforms: "linux/amd64"
          push: true
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}

  wkhtmltopdf:
    runs-on: ubuntu-latest
    needs: [ base ]
    strategy:
      fail-fast: false
      matrix:
        version: [ "8.4" ]
        variant: [ fpm-wkhtmltopdf, cli-wkhtmltopdf ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # 🔐 Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # 🔐 Connexion à GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get latest tag (auto)
        id: get_tag
        run: |
          if [ "${{ inputs.generate_dev }}" = "true" ]; then
            tag="dev"
          else
            tag=$(git describe --tags --abbrev=0)
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ inputs.registry }}/${{ inputs.image }}:${{ matrix.version }}-${{ matrix.variant }}" >> $GITHUB_OUTPUT
        id: image_tag
      - name: Set repository
        run: echo "REPOSITORY=${{ inputs.registry }}/${{ inputs.image }}" >> $GITHUB_OUTPUT
        id: repository
      - name: Build image amd64
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          platforms: "linux/amd64"
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          #platforms: "linux/amd64,linux/arm64"
          platforms: "linux/amd64"
          push: true
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}
  caddy:
    runs-on: ubuntu-latest
    needs: [base, wkhtmltopdf]
    strategy:
      fail-fast: false
      matrix:
        version: ["8.4"]
        variant: [caddy, caddy-wkhtmltopdf]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🔐 Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # 🔐 Connexion à GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get latest tag (auto)
        id: get_tag
        run: |
          if [ "${{ inputs.generate_dev }}" = "true" ]; then
            tag="dev"
          else
            tag=$(git describe --tags --abbrev=0)
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ inputs.registry }}/${{ inputs.image }}:${{ matrix.version }}-${{ matrix.variant }}" >> $GITHUB_OUTPUT
        id: image_tag
      - name: Set repository
        run: echo "REPOSITORY=${{ inputs.registry }}/${{ inputs.image }}" >> $GITHUB_OUTPUT
        id: repository
      - name: Build image amd64
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          platforms: "linux/amd64"
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.image }}
          file: ./${{ inputs.image }}/Dockerfile.${{ matrix.variant }}
          #platforms: "linux/amd64,linux/arm64"
          platforms: "linux/amd64"
          push: true
          tags: |
            if [ "${{ inputs.generate_dev }}" = "true" ]; then
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-dev
            else
              ${{ steps.image_tag.outputs.IMAGE_TAG }}-${{ steps.get_tag.outputs.tag }}
              ${{ steps.image_tag.outputs.IMAGE_TAG }}
            fi
          build-args: |
            PHP_VERSION=${{ matrix.version }}
            REGISTRY=${{ inputs.registry }}
