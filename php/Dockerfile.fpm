# syntax=docker/dockerfile:1
ARG PHP_VERSION
FROM php:${PHP_VERSION}-fpm-alpine

ENV COMPOSER_ALLOW_SUPERUSER='1'
ENV COMPOSER_MEMORY_LIMIT='-1'
ENV PHP_INI_MEMORY_LIMIT='128M'

ENV PHP_INI_DATE_TIMEZONE='UTC'
ENV PHP_INI_CGI_FIX_PATHINFO='1'

ENV PHP_INI_UPLOAD_MAX_FILESIZE='16M'
ENV PHP_INI_POST_MAX_SIZE='16M'

ENV PHP_INI_ERROR_REPORTING='E_ALL & ~E_DEPRECATED & ~E_STRICT'
ENV PHP_INI_DISPLAY_ERRORS='Off'
ENV PHP_INI_DISPLAY_STARTUP_ERRORS='Off'

ENV PHP_INI_REALPATH_CACHE_SIZE='4096k'
ENV PHP_INI_REALPATH_CACHE_TTL='120'

ENV PHP_INI_OPCACHE_MEMORY_CONSUMPTION='128'
ENV PHP_INI_OPCACHE_INTERNED_STRINGS_BUFFER='8'
ENV PHP_INI_OPCACHE_MAX_ACCELERATED_FILES='4000'
ENV PHP_INI_OPCACHE_REVALIDATE_FREQ='60'
ENV PHP_INI_OPCACHE_FAST_SHUTDOWN='1'
ENV PHP_INI_OPCACHE_ENABLE_CLI='1'
ENV PHP_INI_OPCACHE_ENABLE='1'

ENV PHP_INI_SOAP_WSDL_CACHE_ENABLED='1'

ENV PHP_INI_MAX_EXECUTION_TIME='30'
ENV PHP_INI_MAX_INPUT_TIME='60'

ENV PHP_INI_SENDMAIL_PATH='sendmail -t -i'

ENV XDEBUG_REMOTE_AUTOSTART='1'
ENV XDEBUG_REMOTE_PORT='9003'
ENV XDEBUG_START_WITH_REQUEST='trigger'
ENV XDEBUG_MODE='Off'

WORKDIR /var/www/html

RUN apk add  --upgrade --no-cache \
		acl \
		fcgi \
		bash \
		openssh-client \
		file \
		gettext \
		git \
        xz \
        curl \
        openssl \
        zip \
        unzip \
	;

# persistent / runtime deps
RUN curl -sSLf \
        -o /usr/local/bin/install-php-extensions \
        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions && \
    chmod +x /usr/local/bin/install-php-extensions

# Use the default production configuration
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# Copy configuration
COPY config/php.ini /usr/local/etc/php/conf.d/000-php.ini
COPY config/fpm/php-fpm.conf /usr/local/etc/
COPY config/fpm/pool.d /usr/local/etc/pool.d

RUN echo "expose_php = Off" > /usr/local/etc/php/conf.d/expose_php.ini

# Install extensions
RUN install-php-extensions opcache sysvsem soap intl gettext ldap swoole zip amqp mongodb redis mysqli pgsql pdo_mysql pdo_pgsql gd imagick exif

COPY --from=composer /usr/bin/composer /usr/bin/composer

RUN apk add --no-cache gnu-libiconv libwebp-tools jpegoptim optipng pngquant mysql-client

ENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php

COPY config/fpm/docker-healthcheck.sh /usr/local/bin/docker-healthcheck
RUN chmod +x /usr/local/bin/docker-healthcheck

RUN chown -R www-data:www-data /var/www

HEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD ["docker-healthcheck"]
