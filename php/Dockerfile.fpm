# syntax=docker/dockerfile:1
ARG PHP_VERSION
FROM php:${PHP_VERSION}-fpm-alpine

ENV COMPOSER_ALLOW_SUPERUSER=1

WORKDIR /var/www/html

RUN apk add  --upgrade --no-cache \
		acl \
		fcgi \
		file \
		gettext \
		git \
        xz \
        curl \
        openssl \
	;

# persistent / runtime deps
RUN curl -sSLf \
        -o /usr/local/bin/install-php-extensions \
        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions && \
    chmod +x /usr/local/bin/install-php-extensions

# Use the default production configuration
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# Copy configuration
COPY config/php.ini /usr/local/etc/php/conf.d/
COPY config/fpm/php-fpm.conf /usr/local/etc/
COPY config/fpm/pool.d /usr/local/etc/pool.d

RUN echo "expose_php = Off" > /usr/local/etc/php/conf.d/expose_php.ini

# Install extensions
RUN install-php-extensions @composer opcache sysvsem soap intl gettext ldap swoole zip amqp mongodb redis mysqli pgsql pdo_mysql pdo_pgsql gd imagick exif

RUN apk add --no-cache gnu-libiconv libwebp-tools jpegoptim optipng pngquant mysql-client

ENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php

COPY config/fpm/docker-healthcheck.sh /usr/local/bin/docker-healthcheck
RUN chmod +x /usr/local/bin/docker-healthcheck

HEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD ["docker-healthcheck"]
